.section text
    .temps r6, r7
    .zero r0

.section init
    r0 := 0

.section text
    print:
        push r1 on stack r2
        push r4 on stack r2
        push r3 on stack r2

        output ">>> "

        r5 := m[r0][r2 + 3]
        if (r5 == 0) goto print_zero

        if (r5 <s 0) goto print_neg using r1

        push r5 on stack r2
        goto print_pos linking r1
        pop stack r2
        
        goto finish_print

    print_zero:
        r5 := 48
        output r5

        goto finish_print

    print_neg:
        r5 := r5 * -1
        output 45
        push r5 on stack r2
        goto print_pos linking r1
        pop stack r2

        goto finish_print

    print_pos:
        push r1 on stack r2
        push r4 on stack r2
        push r3 on stack r2
        
        r3 := m[r0][r2 + 3]                 # r3 stores the current value

        r4 := r3 / 10
        push r3 on stack r2
        if (r4 == 0) goto base_case_print using r5 
        pop stack r2

        push r4 on stack r2
        goto print_pos linking r1
        pop stack r2

        r4 := r3 mod 10                     
        r4 := r4 + 48
        output r4
        
        goto finish_print

    base_case_print:
        pop r3 off stack r2
        r4 := r3 mod 10
        r4 := r4 + 48
        output r4

        goto finish_print

    finish_print:
        pop r3 off stack r2
        pop r4 off stack r2
        pop r5 off stack r2
        goto r5